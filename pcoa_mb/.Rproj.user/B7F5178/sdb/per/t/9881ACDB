{
    "collab_server" : "",
    "contents" : "library(rgl)\nlibrary(car)\nlibrary(shiny)\n\n#######################################################################################\n###                                      NOTES                                      ###\n#######################################################################################\n##This code is written to take in the generated pCOA weighted unifrac values and generate\n##a pCOA plot using the top three values. It will also allow users to upload a labels \n##document, which will allow for additional visualization of categorical labels.\n\n#######################################################################################\n###                                      Code                                      ###\n#######################################################################################\n\nfunction(input,output){\n  \n  # Takes the input file generated by user, and reads the table \n  data <- reactive({\n    file <- input$file\n    if (is.null(file))\n      return(NULL)\n    pcoa_full <- read.table(file=input$file$datapath)\n    return (pcoa_full)\n  })\n\n  #Display the summary for the file information provided by the user\n  output$filedf <- renderTable({\n    if(is.null(data())){return ()}\n    input$file\n  })\n    \n  # Displays a preview of the data to ensure table is in correct format\n  output$table <- renderTable({\n    if(is.null(data())){return ()}\n    data()\n  })\n    \n  # Prints the summary and data preview back to the user\n  output$tb <- renderUI({\n    if(is.null(data())){return()}\n    else\n      tabsetPanel(tabPanel(\"File Summary\", tableOutput(\"filedf\")), tabPanel(\"Data\", tableOutput(\"table\")))\n  })\n \n  #When the active button has been selected, generates a pCOA plot for the user to manipulate\n  observeEvent(input$goButton, {\n    \n    #Assign colors for the categories\n    colors <- c(\"red\", \"green\", \"white\", \"yellow\")\n    \n    #Assign top three pCOA values to plot\n    pc1 <- data()[,2]\n    pc2 <- data()[,3]\n    pc3 <- data()[,4]\n     \n    output$plot <- renderRglwidget({\n      open3d(useNULL=TRUE)\n      scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, pch=15, surface.col = colors, cex=10,\n                axis.col = c(\"white\", \"white\", \"white\"), bg=\"black\")\n      par3d(mouseMode = \"trackball\")\n      rglwidget()\n    })\n  })\n}",
    "created" : 1507136906088.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3164849092",
    "id" : "9881ACDB",
    "lastKnownWriteTime" : 1507153796,
    "last_content_update" : 1507153796651,
    "path" : "C:/Program Files/Git/pcoa_mb/App/server.R",
    "project_path" : "App/server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}