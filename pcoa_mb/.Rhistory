library(car)
library(rgl)
library("RColorBrewer")
pcoa_full <- read.table('./pcoa_weighted_unifrac_rarefaction_10000_0.txt')
pc1 <- pcoa_full$V2
pc2 <- pcoa_full$V3
pc3 <- pcoa_full$V4
pcoa_labs <- read.table('./NP0452-MB6_Nephele_Labels_10000.txt')
names <- unique(pcoa_labs$V3)
palette(c(brewer.pal(n=12, name = "Set3"),brewer.pal(n=12, name = "Paired"),brewer.pal(n=11, name = "Spectral")))
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
text3d(x=1.1, y=c(.9,1,1.1), z=1.1, names(names) ,col="white")
text3d(x=1.1, y=c(.9,1,1.1), z=1.1, names(unique(pcoa_labs$V3)) ,col="white")
text3d(x=1.1, y=c(.9,1,1.1), z=1.1, unique(pcoa_labs$V3) ,col="white")
text3d(x=1.1, y=1.1, z=1.1, unique(pcoa_labs$V3) ,col="white")
text3d(x=1.1, y=c(.9,1,1.1,1.3,1.5), z=1.1, unique(pcoa_labs$V3) ,col="white")
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
text3d(x=1.1, y=c(.9,1,1.1,1.3,1.5), z=1.1, unique(pcoa_labs$V3) ,col="white")
text3d(x=1.1, y=c(.9,1,1,1.1,1.2), z=1.1, unique(pcoa_labs$V3) ,col="white")
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
text3d(x=1.1, y=c(.9,1,1,1.1,1.2), z=1.1, unique(pcoa_labs$V3) ,col="white")
points3d(x=1.2,y=c(.9,1,1.1),z=1.1, col=as.numeric(as.factor(loadings[,4])), size=5)
points3d(x=1.2,y=c(.9,1,1.1),z=1.1, col=palette(), size=5)
points3d(x=1.2,y=c(.9,1,1.1,1.2,1.3),z=1.1, col=palette(), size=5)
text3d(x=1.5, y=c(.9,1,1.1,1.2,1.3), z=1.1, unique(pcoa_labs$V3) ,col="white")
points3d(x=1.2,y=c(.9,1,1.1,1.2,1.3),z=1.1, col=palette(), size=5)
text3d(x=1.3, y=c(.9,1,1.1,1.2,1.3), z=1.1, unique(pcoa_labs$V3) ,col="white")
points3d(x=1.2,y=c(.9,1,1.1,1.2,1.3),z=1.1, col=palette(), size=5)
text3d(x=1.4, y=c(.9,1,1.1,1.2,1.3), z=1.1, unique(pcoa_labs$V3) ,col="white")
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
text3d(x=1.4, y=c(.9,1,1.1,1.2,1.3), z=1.1, unique(pcoa_labs$V3) ,col="white")
points3d(x=1.2,y=c(.9,1,1.1,1.2,1.3),z=1.1, col=palette(), size=5)
text3d(x=1.4, y=c(.9,.95,.96,1.1,1.2,1.3), z=1.1, unique(pcoa_labs$V3) ,col="white")
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
text3d(x=1.4, y=c(.9,.95,.96,1.1,1.2,1.3), z=1.1, unique(pcoa_labs$V3) ,col="white")
text3d(x=1.4, y=c(.9,.95,1,1.05,1.1), z=1.1, unique(pcoa_labs$V3) ,col="white")
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
text3d(x=1.4, y=c(.9,.95,1,1.05,1.1), z=1.1, unique(pcoa_labs$V3) ,col="white")
points3d(x=1.2,y=c(.9,.95,1,1.05,1.1),z=1.1, col=palette(), size=5)
shiny::runApp('App')
runApp('App')
library(leaflet)
install.packages("leaflet")
library(leaflet)
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
names=unique(pcoa_labs$V3)
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
names=unique(pcoa_labs$V3)
legend(1,95,legend=names,col=palette(), lty=1:2, cex=0.8)
legend(1,1,legend=names,col=palette(), lty=1:2, cex=0.8)
legend(1,1,legend=names,col=palette(),cex=0.8)
legend(1,1,legend=names,col=palette(),pch=16, cex=0.8)
legend(1,1,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=0.8)
legend(1,1,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=0.8)
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
names=unique(pcoa_labs$V3)
legend(1,1,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=0.8)
runApp('App')
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend(1,1,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=5)
legend(1,1,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=3)
legend(1,1,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
legend(legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
legend(0,0,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend(0,0,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
legend(.5,.5,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend(.5,.5,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
legend(1,1,legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
legend("topright",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
runApp('App')
runApp('App')
plot?
)
plot()
dim(plot)
runApp('App')
par(pin=c(10,10))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
par(pin=c(100,10))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
par(pin=c(2,2))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
runApp('App')
shiny::runApp('App')
par(pin=c(.5,5))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
par(pin=c(2,2))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
par(pin=c(1,1))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
par(pin=c(9,9))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
par(pin=c(8,8))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
par(pin=c(5,5))
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n")
legend("topleft",legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
runApp('App')
shiny::runApp('App')
library(rgl)
library(car)
library(shiny)
library("RColorBrewer")
fluidPage(
##Create two navigation pages, 1) Input files | 2) pCOA Plots
navbarPage("Microbime QC Testing",
tabPanel("Input Files",
#Sidebar to include the input files (data and labels) and generate a file summary.
#Once upload is completed summary is displayed and pCOA plot generated upon selection
#of the action button.
sidebarLayout(
sidebarPanel(
helpText("NOTE: File should be a txt file"),
fileInput("file","Upload the pCOA_data_file"),
helpText("NOTE: File should be a txt file with headers"),
fileInput("file2","Upload the labels_file"),
actionButton("goButton", "Generate pCOA Plot")
),
mainPanel = (
uiOutput("tb")
)
)
),
tabPanel("pCOA Plots",
fluidRow(
column(3,
actionButton("Button_Groups", "Color by Treatment Groups"),
br(),
actionButton("Button_AssayPlate", "Color by AssayPlate"),
br(),
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
),
column(4, offset=1,
actionButton("Button_ExtractionBatch", "Color by ExtractionBatch"),
br(),
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
),
column(4,
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
)
),
fluidRow(
column(8,
rglwidgetOutput("plot",  width = 1000, height = 800)
),
column(9, offset=1,
plotOutput("legend", width=300, height=300)
)
),
)
)
)
fluidPage(
##Create two navigation pages, 1) Input files | 2) pCOA Plots
navbarPage("Microbime QC Testing",
tabPanel("Input Files",
#Sidebar to include the input files (data and labels) and generate a file summary.
#Once upload is completed summary is displayed and pCOA plot generated upon selection
#of the action button.
sidebarLayout(
sidebarPanel(
helpText("NOTE: File should be a txt file"),
fileInput("file","Upload the pCOA_data_file"),
helpText("NOTE: File should be a txt file with headers"),
fileInput("file2","Upload the labels_file"),
actionButton("goButton", "Generate pCOA Plot")
),
mainPanel = (
uiOutput("tb")
)
)
),
tabPanel("pCOA Plots",
fluidRow(
column(3,
actionButton("Button_Groups", "Color by Treatment Groups"),
br(),
actionButton("Button_AssayPlate", "Color by AssayPlate"),
br(),
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
),
column(4, offset=1,
actionButton("Button_ExtractionBatch", "Color by ExtractionBatch"),
br(),
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
),
column(4,
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
)
),
fluidRow(
column(8,
rglwidgetOutput("plot",  width = 1000, height = 800)
),
column(9, offset=1,
plotOutput("legend", width=300, height=300)
)
),
)
)
)
fluidPage(
##Create two navigation pages, 1) Input files | 2) pCOA Plots
navbarPage("Microbime QC Testing",
tabPanel("Input Files",
#Sidebar to include the input files (data and labels) and generate a file summary.
#Once upload is completed summary is displayed and pCOA plot generated upon selection
#of the action button.
sidebarLayout(
sidebarPanel(
helpText("NOTE: File should be a txt file"),
fileInput("file","Upload the pCOA_data_file"),
helpText("NOTE: File should be a txt file with headers"),
fileInput("file2","Upload the labels_file"),
actionButton("goButton", "Generate pCOA Plot")
),
mainPanel = (
uiOutput("tb")
)
)
),
tabPanel("pCOA Plots",
fluidRow(
column(3,
actionButton("Button_Groups", "Color by Treatment Groups"),
br(),
actionButton("Button_AssayPlate", "Color by AssayPlate"),
br(),
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
),
column(4, offset=1,
actionButton("Button_ExtractionBatch", "Color by ExtractionBatch"),
br(),
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
),
column(4,
actionButton("Button_Row", "Color by Row"),
br(),
actionButton("Button_QS", "Color by QS")
)
),
fluidRow(
column(8,
rglwidgetOutput("plot",  width = 1000, height = 800)
),
column(9, offset=1,
plotOutput("legend", width=300, height=300)
)
)
)
)
)
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
runApp('App')
library(car)
library(rgl)
library("RColorBrewer")
pcoa_full <- read.table('./pcoa_weighted_unifrac_rarefaction_10000_0.txt')
pc1 <- pcoa_full$V2
pc2 <- pcoa_full$V3
pc3 <- pcoa_full$V4
pcoa_labs <- read.table('./NP0452-MB6_Nephele_Labels_10000.txt')
names <- unique(pcoa_labs$V3)
#Create palette of colors
palette(c(brewer.pal(n=12, name = "Set3"),brewer.pal(n=12, name = "Paired"),brewer.pal(n=11, name = "Spectral")))
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
colkey(side = 1, clim = c(0, 1), add = FALSE, clab = "z",
col.clab = "red", adj.clab = 0)
library(car)
library(rgl)
library("RColorBrewer")
pcoa_full <- read.table('./pcoa_weighted_unifrac_rarefaction_10000_0.txt')
pc1 <- pcoa_full$V2
pc2 <- pcoa_full$V3
pc3 <- pcoa_full$V4
pcoa_labs <- read.table('./NP0452-MB6_Nephele_Labels_10000.txt')
names <- unique(pcoa_labs$V3)
palette(c(brewer.pal(n=12, name = "Set3"),brewer.pal(n=12, name = "Paired"),brewer.pal(n=11, name = "Spectral")))
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black", colkey=palette())
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black", colkey=FALSE)
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black", colkey="white")
text3D(x = cos(1:10), y = (sin(1:10)*(1:10) - 1),
z = 1:10, colkey = FALSE, add = TRUE,
labels = LETTERS[1:10], col = c("black", "red"))
install.packages(plot3d)
install.packages("plot3d")
install.packages("plot3D")
text3D(x = cos(1:10), y = (sin(1:10)*(1:10) - 1),
z = 1:10, colkey = FALSE, add = TRUE,
labels = LETTERS[1:10], col = c("black", "red"))
library(plot3D)
text3D(x = cos(1:10), y = (sin(1:10)*(1:10) - 1),
z = 1:10, colkey = FALSE, add = TRUE,
labels = LETTERS[1:10], col = c("black", "red"))
text3D(x = cos(1:10), y = (sin(1:10)*(1:10) - 1),
z = 1:10, colkey = FALSE, add = TRUE,
labels = LETTERS[1:10], col = c("black", "red"))
colkey(side = 1, clim = c(0, 1), add = FALSE, clab = "z",
col.clab = "red", adj.clab = 0)
shiny::runApp('App')
colkey(side = 3, clim = palette(), add = FALSE, clab = "Legend",
col.clab = "red", adj.clab = 0)
runApp('App')
par(xpd=FALSE)
plot(x=1,y=NULL,type="n",xaxt="n",yaxt="n",ylab="",xlab="",bty="n", axes=F)
legend("topleft",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
plot.new()
legend("topleft",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
par(xpd=TRUE)
plot.new()
legend("topleft",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
legend("topleft",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1)
plot.new()
runApp('App')
legend("top",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
legend("left",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
legend("topleft",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
plot.new()
legend("left",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
par(xpd=TRUE)
plot.new()
legend("left",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
plot.new()
legend("left",title="Color Legend", legend=unique(pcoa_labs$V3),col=palette(),pch=16, cex=1.5)
runApp('App')
runApp('App')
runApp('App')
unilabs <- unique(pcoa_labs$V3)
unilabs
abcleg
abcleg <- order(unilabs)
abcleg
abcleg <- sort(unilabs)
abcleg
runApp('App')
pcoa_labs <- read.table('./NP0452-MB6_Nephele_Labels_10000.txt',header=TRUE)
library(car)
library(rgl)
library("RColorBrewer")
pcoa_full <- read.table('./pcoa_weighted_unifrac_rarefaction_10000_0.txt')
pc1 <- pcoa_full$V2
pc2 <- pcoa_full$V3
pc3 <- pcoa_full$V4
pcoa_labs <- read.table('./NP0452-MB6_Nephele_Labels_10000.txt',header=TRUE)
names <- unique(pcoa_labs$V3)
palette(c(brewer.pal(n=12, name = "Set3"),brewer.pal(n=12, name = "Paired"),brewer.pal(n=11, name = "Spectral")))
scatter3d(x=pc1, y=pc2, z=pc3, surface=FALSE, groups = pcoa_labs$V3, pch=5, surface.col = palette(), cex=5,
labels = pcoa_labs$V3, id.n=nrow(pcoa_labs),
axis.col = c("white", "white", "white"), bg="black")
